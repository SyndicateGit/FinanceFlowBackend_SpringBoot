package com.financeflow.financeflow_backend.model;
import java.time.LocalDateTime;
import java.math.BigDecimal;

import jakarta.persistence.*;
import lombok.AllArgsConstructor;
import lombok.Getter;
import lombok.NoArgsConstructor;
import lombok.Setter;

@Getter
@Setter
@NoArgsConstructor
@AllArgsConstructor
@Entity // Specifies class as JPA entity
@Table(name = "transactions") // Specifies the name of the table in the database autogenerated by Hibernate
public class Transaction {
    public enum RecurringType {
        DAILY,
        WEEKLY,
        MONTHLY,
        YEARLY
    }

    public enum TransactionType {
        TRANSFER,
        EXPENSE,
        INCOME
    }

    @Id
    @GeneratedValue(strategy = GenerationType.IDENTITY)
    private Long id;

    @Column(name = "account_id", nullable = false)
    private Long accountId;

    @Enumerated(EnumType.STRING)
    @Column(nullable = false)
    private TransactionType type;

    @Column(nullable = false)
    private BigDecimal amount;
    private String currency;

    @Column(nullable = false)
    private LocalDateTime date;

    @Column(name = "is_recurring")
    private boolean isRecurring;

    @Enumerated(EnumType.STRING)
    @Column(name = "recurring_type")
    private RecurringType recurringType;

    @Column(nullable = false)
    private String note;
    @Column(nullable = false)
    private String category;
    private String description;

    public void setDate(LocalDateTime date) {
        this.date = date;
    }
    @Override
    public String toString(){
        return "Transaction{" +
                "id=" + id +
                ", accountId=" + accountId +
                ", type=" + type +
                ", amount=" + amount +
                ", currency='" + currency + '\'' +
                ", date=" + date +
                ", isRecurring=" + isRecurring +
                ", recurringType=" + recurringType +
                ", note='" + note + '\'' +
                ", category='" + category + '\'' +
                ", description='" + description + '\'' +
                '}';
    }
}
